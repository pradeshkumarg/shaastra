{"version":3,"sources":["store/index.jsx","constants.js","components/SignUp.jsx","components/ProgressBar.jsx","actions/dataService.js","actions/index.js","components/LeadershipBoard.jsx","components/NumberMemory.jsx","components/ReactionTime.jsx","components/VerbalMemory.jsx","components/VisualMemory.jsx","data/fraud.js","components/FraudDetection.jsx","components/LockedScreen.jsx","components/Main.jsx","App.js","index.js"],"names":["gameType","localStorage","getItem","store","createStore","combineReducers","user","currentState","action","type","data","game","setItem","status","applyMiddleware","thunk","connect","dispatch","setUserData","React","name","mobile","userName","domain","college","setData","validationFailed","setValidationFailed","handleChange","target","id","value","className","style","margin","marginTop","htmlFor","FormControl","field","aria-label","aria-describedby","onChange","message","InputGroup","size","Prepend","Text","Button","variant","onClick","schema","yup","shape","required","email","formData","validate","then","catch","err","path","Progress","onLapse","counter","setCounter","setTimeout","ProgressBar","min","max","now","animated","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","removeSpecialChars","string","replace","submitScore","level","getState","score","Promise","resolve","reject","phone","timestamp","Date","console","log","userId","ref","transaction","error","postScore","columns","key","gameTypeMap","LeadershipBoard","limit","gameTypeRef","startAt","orderByChild","limitToFirst","limitToLast","once","snapshot","results","val","userData","Object","keys","map","sort","a","b","idx","rank","fetchLeadershipBoardData","rowGetter","rowNumber","rowsCount","length","minHeight","NumberMemory","screen","setScreen","SplashScreen","generateRandomNumber","digits","result","i","push","Math","floor","random","join","GameScreen","setScore","setLevel","numberValue","current","showInput","InputScreen","nextLevel","DisplayScreen","restartGame","submitGameScore","inputValue","setInputValue","prevState","retries","_input","focus","pattern","align","onKeyPress","autoFocus","trim","displayValue","len","notMatch","substr","computeDifference","avgTime","startTime","endTime","tries","totalTimeTaken","timeoutHandle","ceil","round","bgcolor","clearTimeout","wordsList","lives","setLives","words","selectedIndex","selectedWords","word","setWord","validateSelection","newWord","indexOf","randInd","buildPattern","tilesCount","activeTilesCount","matrix","activeTiles","j","x","y","tilesMap","1","3","6","9","14","19","Matrix","tiles","setLifeLost","addScore","view","setView","selected","setSelected","chances","prevLives","handleClick","match","newSelected","patterns","retVal","isPatternMatched","EmptyMatrix","MatrixRow","Square","undefined","setPattern","FraudData","getProfiles","profiles","fraudDataFound","randNo","FraudLabel","Game","onAnswer","onTimeout","selectedCard","setSelectedCard","answer","setAnswer","prefixZero","handleCardClick","character","onClose","date","renderer","hours","minutes","seconds","completed","d","Name","parseInt","disabled","GameCard","Education","CityOfBirth","CountryOfBirth","Networth","Salaried","Age","Industry","CriminalRecords","Trivia","Card","Title","aria-hidden","Body","isAnswerCorrect","timeOut","LockedScreen","setGame","useHotkeys","ke","preventDefault","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea9cc4e0.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { UserReducerType_SignIn, UserReducerType_SignOut, GameReducerType_NumberMemory, GameReducerType_ReactionTime, GameReducerType_VerbalMemory, GameReducerType_VisualMemory, StatusReducerType_Idle, StatusReducerType_Failed, StatusReducerType_Posting, StatusReducerType_Success, GameReducerType_FraudDetection, GameReducerType_Locked } from '../constants';\n\nconst userReducer = (currentState = null, action) => {\n    switch (action.type) {\n        case UserReducerType_SignIn:\n            return action.data;\n        case UserReducerType_SignOut:\n            return null;\n        default:\n            return currentState;\n    }\n};\n\nconst gameReducer = (currentState = GameReducerType_Locked, action) => {\n    switch (action.type) {\n        case GameReducerType_NumberMemory:\n        case GameReducerType_ReactionTime:\n        case GameReducerType_VerbalMemory:\n        case GameReducerType_VisualMemory:\n        case GameReducerType_FraudDetection:\n        case GameReducerType_Locked:\n            localStorage.setItem('gameType', action.type);\n            return action.type;\n        default:\n            return currentState;\n    }\n}\n\nconst statusReducer = (currentState = StatusReducerType_Idle, action) => {\n    switch (action.type) {\n        case StatusReducerType_Idle:\n        case StatusReducerType_Posting:\n        case StatusReducerType_Success:\n        case StatusReducerType_Failed:\n            return action.type;\n        default:\n            return currentState;\n    }\n};\n\nconst gameType = localStorage.getItem('gameType') || GameReducerType_NumberMemory;\n\nconst store = createStore(combineReducers({\n    user: userReducer,\n    game: gameReducer,\n    status: statusReducer,\n}), { game: gameType }, applyMiddleware(thunk));\n\nexport default store;","export const UserReducerType_SignIn = 'SIGN_IN';\nexport const UserReducerType_SignOut = 'SIGN_OUT';\n\nexport const GameReducerType_NumberMemory = 'NUMBER_MEMORY';\nexport const GameReducerType_ReactionTime = 'REACTION_TIME';\nexport const GameReducerType_VerbalMemory = 'VERBAL_MEMORY';\nexport const GameReducerType_VisualMemory = 'VISUAL_MEMORY';\nexport const GameReducerType_FraudDetection = 'FRAUD_DETECTION';\nexport const GameReducerType_Locked = 'LOCKED_SCREEN';\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyDKoTvKNwTVXVO_hqYVcHvh4HQIJinh-48\",\n    authDomain: \"socure-games.firebaseapp.com\",\n    databaseURL: \"https://socure-games.firebaseio.com\",\n    projectId: \"socure-games\",\n    storageBucket: \"socure-games.appspot.com\",\n    messagingSenderId: \"1068599362991\",\n    appId: \"1:1068599362991:web:158604258d3df54e17db5a\"\n};\n\nexport const StatusReducerType_Idle = 'Idle';\nexport const StatusReducerType_Posting = 'POSTING';\nexport const StatusReducerType_Success = 'Success';\nexport const StatusReducerType_Failed = 'Failed';","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport './SignUp.css';\nimport { UserReducerType_SignIn, StatusReducerType_Idle } from '../constants';\nimport * as yup from 'yup';\n\nconst SignUp = ({ setUserData }) => {\n    const [data, setData] = React.useState({ name: '', mobile: '', userName: '', domain: '', college: 'IITM' });\n    const [validationFailed, setValidationFailed] = React.useState(null);\n\n    const handleChange = ({ target }) => {\n        setData({ ...data, [target.id]: target.value });\n    };\n\n    const handleSave = () => {\n        const schema = yup.object().shape({\n            name: yup.string().required(),\n            mobile: yup.number(),\n            college: yup.string(),\n            email: yup.string()\n        });\n\n        const formData = {name: data.name, mobile: data.mobile, email: data.userName && data.domain && `${data.userName}@${data.domain}`, college: data.college };\n\n        schema.validate(formData).then(() => {\n            setUserData(formData);\n        }).catch(err => {\n            setValidationFailed({ field: err.path, message: err.message });\n        });\n    };\n\n    return (\n        <div className=\"flex signUpForm flex-wrap flex-col bg-orange pad-30\" style={{margin: 'auto'}}>\n            <div className=\"formTitle align-center justify-center flex\" style={{marginTop: 0}}>Participant Signup Form</div>\n            <div className=\"fieldSet\">\n                <label htmlFor=\"name\" className=\"fieldTitle\">Name:</label>\n                <div className=\"fieldInput\">\n                    <FormControl className={`${validationFailed && validationFailed.field === 'name' ? 'validationError' : ''}`}  id=\"name\" aria-label=\"Name\" aria-describedby=\"Participant Name\" value={data.name} onChange={handleChange} />\n                    {validationFailed && validationFailed.field === 'name' && <div className=\"validationMessage\">{validationFailed.message}</div>}\n                </div>\n            </div>\n            <div className=\"fieldSet\">\n                <label htmlFor=\"userName\" className=\"fieldTitle\">Email Address:</label>\n                <div className=\"fieldInput\">\n                    <InputGroup size=\"lg\" className={`${validationFailed && validationFailed.field === 'email' ? 'validationError' : ''}`}>\n                        <FormControl id=\"userName\" aria-label=\"User Name\" aria-describedby=\"Email User Name\" value={data.userName} onChange={handleChange} />\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-lg\">@</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl id=\"domain\" aria-label=\"Domain\" aria-describedby=\"Email Domain\" value={data.domain} onChange={handleChange} />\n                    </InputGroup>\n                    {validationFailed && validationFailed.field === 'email' && <div className=\"validationMessage\">{validationFailed.message}</div>}\n                </div>\n            </div>\n            <div className=\"fieldSet\">\n                <label htmlFor=\"mobile\" className=\"fieldTitle\">Mobile Number:</label>\n                <div className=\"fieldInput\">\n                    <InputGroup size=\"lg\" className={`${validationFailed && validationFailed.field === 'mobile' ? 'validationError' : ''}`}>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-lg\">+91</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl id=\"mobile\" aria-label=\"Mobile\" aria-describedby=\"Mobile Number\" value={data.mobile} onChange={handleChange} />\n                    </InputGroup>\n                    {validationFailed && validationFailed.field === 'mobile' && <div className=\"validationMessage\">{validationFailed.message}</div>}\n                </div>\n            </div>\n            <div className=\"fieldSet\">\n                <label htmlFor=\"college\" className=\"fieldTitle\">Institution:</label>\n                <div className=\"fieldInput\">\n                    <FormControl id=\"college\" aria-label=\"Institution\" aria-describedby=\"Institution\" value={data.college} onChange={handleChange} />\n                    {validationFailed && validationFailed.field === 'college' && <div className=\"validationMessage\">{validationFailed.message}</div>}\n                </div>\n            </div>\n            <div className=\"flex align-center justify-center\">\n                <Button variant=\"primary\" onClick={handleSave}>Save</Button>\n            </div>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserData: (data) => {\n            dispatch({ type: StatusReducerType_Idle});\n            dispatch({ type: UserReducerType_SignIn, data });\n        }\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(SignUp);","import * as React from 'react';\nimport { ProgressBar } from 'react-bootstrap';\n\nconst Progress = ({ value, onLapse }) => {\n    const [counter, setCounter] = React.useState(value * 100);\n\n    React.useEffect(() => {\n        (counter > 0)  && \n            setTimeout(() => {\n                setCounter(counter - 10);\n            }, 100);\n            (counter <= 0)  && setTimeout(onLapse, 200);\n    });\n\n    return <ProgressBar variant=\"primary\" min={0} max={value * 100} now={counter} animated />;\n}\n\nexport default Progress;","import { firebaseConfig, GameReducerType_ReactionTime, GameReducerType_FraudDetection } from \"../constants\";\nimport * as firebase from 'firebase';\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst removeSpecialChars = (string) => {\n    return string.replace(/[^a-zA-Z0-9]/g, \"\")\n}\n\nexport const postScore = (user, gameType, score) => {\n    return new Promise((resolve, reject) => {\n        const { name, email, mobile: phone, college } = user;\n        const timestamp = Date.now();\n        console.log(\"DataService submitScore:\");\n        console.log(user, gameType, score);\n\n        var userId = removeSpecialChars(name) + \"-\" + removeSpecialChars(email) + \"-\" + removeSpecialChars(phone);\n        console.log(\"user id : \" + userId)\n\n        try {\n            const ref = firebase.database().ref('user-scores/' + gameType + '/' + userId);\n            ref.transaction((data) => {\n                if (data !== null) {\n                    if (gameType === GameReducerType_ReactionTime && data.score > score) {\n                        data.score = score\n                        data.timestamp = timestamp\n                    } else if (data.score <= score) {\n                        data.score = score\n                        data.timestamp = timestamp\n                    }\n                    return data;\n                }\n                else {\n                    return { userId, name: name, email: email, phone, gameType, score, college, timestamp }\n                }\n            });\n\n            resolve(true);\n        } catch (error) {\n            console.log(\"Request failed \", error)\n            reject(error);\n        };\n    });\n}\n\nexport const fetchLeadershipBoardData = (gameType, limit = 10) => {\n    return new Promise((resolve, reject) => {\n        try {\n            let gameTypeRef = firebase.database().ref('user-scores/' + gameType).startAt(1).orderByChild('score');\n\n            if (gameType === GameReducerType_ReactionTime && gameType === GameReducerType_FraudDetection) {\n                gameTypeRef = gameTypeRef.limitToFirst(limit);\n            } else {\n                gameTypeRef = gameTypeRef.limitToLast(limit);\n            }\n\n            gameTypeRef.once('value').then(function (snapshot) {\n                const results = snapshot.val()\n\n                if (results != null) {\n                    // Sort the data in descending order on score, Short coming of firebase\n                    let userData = Object.keys(results).map((key) => { return results[key]; });\n\n                    if (gameType !== GameReducerType_ReactionTime && gameType !== GameReducerType_FraudDetection) {\n                        userData.sort(function (a, b) {\n                            return b.score - a.score;\n                        });\n                    }\n\n                    userData = userData.map((data, idx) => ({...data, rank: idx + 1}))\n\n                    resolve(userData);\n                } else {\n                    resolve([]);\n                }\n            });\n        } catch (error) {\n            console.log(\"Request failed \", error)\n            reject([]);\n        };\n    });\n};","import { postScore } from './dataService';\nimport { StatusReducerType_Posting, StatusReducerType_Success, StatusReducerType_Failed } from '../constants';\n\nexport const submitScore = (level) => (dispatch, getState) => {\n    const { user, game } = getState();\n\n    dispatch({ type: StatusReducerType_Posting });\n\n    postScore(user, game, level)\n        .then(() => {\n            dispatch({ type: StatusReducerType_Success });\n        })\n        .catch((error) => {\n            console.log(\"Failed: \", error);\n            dispatch({ type: StatusReducerType_Failed });\n        });\n};","import * as React from 'react';\n\nimport ReactDataGrid from 'react-data-grid';\nimport { fetchLeadershipBoardData } from '../actions/dataService';\nimport { GameReducerType_ReactionTime, GameReducerType_VerbalMemory, GameReducerType_VisualMemory, GameReducerType_FraudDetection, GameReducerType_NumberMemory } from '../constants';\n\nconst columns = [{key: 'rank', name: 'Rank#'}, { key: 'name', name: 'Name' }, { key: 'email', name: 'Email ID' }, {key: 'mobile', name: 'Mobile No'},  {key:'score',  name:'Score'}];\nconst gameTypeMap = {\n    [GameReducerType_NumberMemory]: 'Number Memory Game',\n    [GameReducerType_ReactionTime]: 'Reaction Time Game',\n    [GameReducerType_VerbalMemory]: 'Verbal Memory Game',\n    [GameReducerType_VisualMemory]: 'Visual Memory Game',\n    [GameReducerType_FraudDetection]: 'Fraud Detection Game'\n}\n\nconst LeadershipBoard = ({ game }) => {\n    const [data, setData] = React.useState([]);\n    const rowGetter = rowNumber => data[rowNumber];\n\n    React.useEffect(() => {\n        game && fetchLeadershipBoardData(game).then(data => {\n            setData(data);\n        });\n    }, [game]);\n\n    console.log(game);\n    console.log(gameTypeMap)\n\n    return (\n        <div className=\"flex flex1 flex-col\">\n            <div className=\"ResultText mar-20\">Leadership Board for {gameTypeMap[game]}</div>\n            <ReactDataGrid\n                columns={columns}\n                rowGetter={rowGetter}\n                rowsCount={data.length}\n                minHeight={500} />\n        </div>\n    );\n};\n\nexport default LeadershipBoard;","import * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport Progress from './ProgressBar';\nimport { connect } from 'react-redux';\nimport { UserReducerType_SignOut, StatusReducerType_Posting, StatusReducerType_Failed, StatusReducerType_Idle, StatusReducerType_Success } from '../constants';\nimport { submitScore } from '../actions';\nimport LeadershipBoard from './LeadershipBoard';\nimport './NumberMemory.css'\n\nconst NumberMemory = () => {\n    const [screen, setScreen] = React.useState('Splash');\n\n    return <div className=\"GameScreen1 flex flex1 flex-col\">\n        <div className=\"flex flex1 justify-center bg-orange\">\n            {screen === 'Splash' && <SplashScreen setScreen={setScreen} />}\n            {screen === 'Game' && <GameScreen />}\n        </div>\n    </div>\n};\n\nexport default NumberMemory;\n\nconst SplashScreen = ({ setScreen }) => {\n    return (\n        <div className=\"align-center flex flex-col flex1 justify-center\">\n            <div className=\"GameTitle flex justify-center mar-30\">Number Memory Game</div>\n            <div className=\"ScreenText flex flex-col justify-center\">\n                <div className=\"flex justify-center TextTitle\">Can you Memorize all the Numbers?</div>\n                <div className=\"flex justify-center Text\">On an average a person can remember upto 7 digit number. Can you do more?</div>\n            </div>\n            <div className=\"flex align-center justify-center\">\n                <Button variant=\"success\" onClick={() => setScreen('Game')}>Start</Button>\n            </div>\n        </div>\n    )\n};\n\nconst generateRandomNumber = (digits) => {\n    const result = [];\n    for (let i = 0; i < digits; i++) {\n        result.push(Math.floor(Math.random() * Math.floor(10)))\n    }\n\n    return result.join('');\n};\n\nconst GameScreen = ({ setScore }) => {\n    const [level, setLevel] = React.useState(1);\n    const [screen, setScreen] = React.useState('Display');\n    const numberValue = React.useRef(generateRandomNumber(level));\n\n    const handleChangeLevel = () => {\n        numberValue.current = generateRandomNumber(level + 1);\n        setLevel(level + 1);\n        setScreen('Display');\n    };\n\n    if (screen === 'Display') {\n        return <DisplayScreen value={numberValue.current} level={level} showInput={() => setScreen('Input')} />;\n    } else if (screen === 'Input') {\n        return <InputScreen value={numberValue.current} level={level} nextLevel={handleChangeLevel} submitScore={setScore} />;\n    }\n};\n\nconst DisplayScreen = ({ value, level, showInput }) => {\n    return (\n        <div className=\"GameScreen justify-center\">\n            <div className=\"NumberText flex justify-center\">{value}</div>\n            <div className=\"\"><Progress value={level} onLapse={showInput} /></div>\n        </div>\n    );\n};\n\nconst computeDifference = (displayValue, inputValue) => {\n    const len = displayValue.length > inputValue.length ? displayValue.length : inputValue.length;\n    const result = [];\n\n    for (let i = 0; i < len; i++) {\n        let notMatch = false;\n        if (displayValue.substr(i, 1) !== inputValue.substr(i, 1)) {\n            notMatch = true;\n        }\n\n        result.push(<div key={i} className={`${notMatch ? 'noMatch' : ''}`}>{inputValue.substr(i, 1)}</div>)\n    }\n\n    return result;\n};\n\nconst InputScreen_Internal = ({ value, level, nextLevel, status, submitGameScore, restartGame,  game }) => {\n    const [screen, setScreen] = React.useState('Input');\n    const [inputValue, setInputValue] = React.useState('');\n    const prevState = React.useRef(StatusReducerType_Idle);\n    const retries = React.useRef(0);\n\n    const _input = React.useRef(null);\n\n    React.useEffect(() => {\n        _input.current && _input.current.focus();\n\n        if (prevState.current !== status) {\n            prevState.current = status;\n\n            if (status === StatusReducerType_Success) {\n                setTimeout(() => setScreen('leaderboard'), 3000);\n            } else if (status === StatusReducerType_Failed) {\n                if (retries.current < 3) {\n                    setTimeout(() => { submitGameScore(level - 1) }, 3000);\n                    retries.current++;\n                } else {\n                    restartGame();\n                }\n            }\n        }\n\n        if (screen === 'leaderboard'){\n            setTimeout(restartGame,  10000);\n        }\n    }, [screen, status, _input, level, submitGameScore, restartGame]);\n\n    const handleSubmit = () => {\n        if (value !== inputValue.trim()) {\n            submitGameScore(level - 1);\n        }\n\n        setScreen('Review');\n    }\n\n    const handleChange = ({ target }) => {\n        setInputValue(target.value);\n    };\n\n    const handleKeyPress = ({ key }) => {\n        if (key === 'Enter') {\n            setScreen('Review');\n        }\n    };\n\n    if (screen === 'Input') {\n        return (\n            <div className=\"GameInputScreen bg-orange\">\n                <div className=\"InputForm flex flex-col justify-center align-center\">\n                    <div className=\"FormTitle flex justify-center flex-col\">\n                        <h2 className=\"flex align-center justify-center\">What was the number?</h2>\n                        <div className=\"hintText flex align-center justify-center\">Press Enter to Submit</div>\n                    </div>\n                    <input type=\"text\" pattern=\"[0-9]*\" className=\"GameInputText white\" align=\"center\" ref={_input} onChange={handleChange} onKeyPress={handleKeyPress} autoFocus />\n                    <div className=\"FormInput\">\n                        <Button variant=\"info\" onClick={handleSubmit}>Submit</Button>\n                    </div>\n                </div>\n            </div>\n        );\n    } else if (screen === 'Review') {\n        return (\n            <div className=\"ReviewScreen flex flex-col\">\n                <div className=\"ResultGroup flex flex-col\">\n                    <div className=\"ResultTitle flex justify-center\">Number Displayed</div>\n                    <div className=\"ResultText flex justify-center\">{value}</div>\n                </div>\n                <div className=\"ResultGroup flex flex-col\">\n                    <div className=\"ResultTitle flex justify-center\">Your Answer</div>\n                    <div className={`ResultText flex justify-center`}>{value === inputValue.trim() ? inputValue : computeDifference(value, inputValue)}</div>\n                </div>\n                <div className=\"LevelText flex justify-center\">Level {level}</div>\n                <div className=\"ResultAction flex justify-center\">\n                    {value === inputValue.trim() ?\n                        <Button variant=\"primary\" onClick={nextLevel}>Next</Button> :\n                        (\n                            status === StatusReducerType_Posting ? <div className=\"StatusText\">Submitting Score...</div> :\n                                status === StatusReducerType_Failed ? <div className=\"StatusText failed\">Score submit failed... retrying...</div> : <div className=\"StatusText success\">Score submitted successfully.</div>)}\n                </div>\n            </div>\n        );\n    } else  if (screen === 'leaderboard') {\n        return <LeadershipBoard game={game} />;\n    }\n};\n\nconst mapStateToProps = ({ status, game }) => ({ status, game });\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        restartGame: () => dispatch({ type: UserReducerType_SignOut }),\n        submitGameScore: (level) => dispatch(submitScore(level))\n    };\n};\n\nconst InputScreen = connect(mapStateToProps, mapDispatchToProps)(InputScreen_Internal);","import * as React from 'react';\nimport {connect} from 'react-redux';\nimport LeadershipBoard  from './LeadershipBoard';\nimport './ReactionTime.css';\nimport { submitScore } from '../actions';\nimport { StatusReducerType_Idle, StatusReducerType_Posting, StatusReducerType_Success, StatusReducerType_Failed, UserReducerType_SignOut } from '../constants';\n\nconst generateRandomNumber = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst ReactionTime = ({status, game, submitGameScore, restartGame}) => {\n    const [screen, setScreen] = React.useState('Splash');\n\n    const startTime = React.useRef(null);\n    const endTime = React.useRef(null);\n    const tries = React.useRef(0);\n    const totalTimeTaken = React.useRef(0);\n    const timeoutHandle = React.useRef(null);\n    const prevState = React.useRef(StatusReducerType_Idle);\n    const retries = React.useRef(0);\n\n    const handleClick = () => {\n        if (timeoutHandle.current) {\n            clearTimeout(timeoutHandle.current);\n            timeoutHandle.current = null;\n        }\n        if (tries.current === 5) {\n            return;\n        }\n        if (screen === 'Splash' || screen === 'Oops') {\n            setScreen('Wait');\n        } else if (screen === 'Wait') {\n            setScreen('Oops');\n        } else if (screen === 'Click') {\n            endTime.current = Date.now();\n            tries.current++;\n            totalTimeTaken.current += (endTime.current - startTime.current);\n            setScreen('Review');\n        } else if (screen === 'Review') {\n            startTime.current = null;\n            endTime.current = null;\n            setScreen('Wait');\n        }\n    };\n\n    React.useEffect(() => {\n        if (screen === 'Wait' && tries.current < 5) {\n            timeoutHandle.current = setTimeout(() => {\n                startTime.current = Date.now();\n                setScreen('Click');\n            }, generateRandomNumber(4, 9) * 1000)\n        } else if (screen === 'Review' && tries.current === 5 && status === StatusReducerType_Idle) {\n            submitGameScore(Math.round(totalTimeTaken.current / tries.current, 0))\n        }\n\n        if (prevState.current !== status) {\n            prevState.current = status;\n\n            if (status === StatusReducerType_Success) {\n                setTimeout(() => setScreen('leaderboard'), 3000);\n            } else if (status === StatusReducerType_Failed) {\n                if (retries.current < 3) {\n                    setTimeout(() => { submitGameScore(Math.round(totalTimeTaken.current / tries.current, 0)) }, 3000);\n                    retries.current++;\n                } else {\n                    restartGame();\n                }\n            }\n        }\n\n        if (screen === 'leaderboard') {\n            setTimeout(restartGame, 10000);\n        }\n    }, [screen, status, restartGame, submitGameScore])\n\n    const bgcolor = screen === 'Splash' || screen === 'Oops' || screen === 'Review' || screen === 'leaderboard' ? 'bg-orange' :\n        screen === 'Wait' ? 'bg-red' :\n            screen === 'Click' ? 'bg-green' : '';\n\n    return (\n        <div className={`flex flex1 justify-center cur-pointer user-select-none ${bgcolor} ${bgcolor !=='bg-orange' ? 'white' : ''}`} onClick={handleClick}>\n            <div className=\"flex flex-col flex1 align-center justify-center\">\n                <div className=\"ScreenText InfoTextArea flex flex-col justify-center\">\n                    {screen === 'Splash' && <>\n                        <div className=\"TextTitle flex justify-center\">Reaction Time Game</div>\n                        <div className=\"flex justify-center GameTitle font-sz-24\">When the background color turns green, click as quickly as you can.</div>\n                        <div className=\"flex justify-center Text\">Click anywhere to start.</div>\n                    </>}\n                    {screen === 'Oops' && <>\n                        <div className=\"flex justify-center TextTitle\">Clicked too early. Wait for the color to change.</div>\n                        <div className=\"flex justify-center Text\">Click to try again.</div>\n                    </>}\n                    {screen === 'Wait' && <>\n                        <div className=\"flex justify-center TextTitle\">Wait for green</div>\n                    </>}\n                    {screen === 'Click' && <>\n                        <div className=\"flex justify-center TextTitle\">Click!</div>\n                    </>}\n                    {screen === 'Review' && <>\n                        <div className=\"flex justify-center TextTitle\">{endTime.current - startTime.current} ms</div>\n                        {tries.current < 5 ?\n                            <div className=\"flex justify-center Text\">Click to keep going.</div> :\n                            (\n                                status === StatusReducerType_Posting ? <div className=\"StatusText\">Submitting Score...</div> :\n                                    status === StatusReducerType_Failed ? <div className=\"StatusText failed\">Score submit failed... retrying...</div> : <div className=\"StatusText success\">Score submitted successfully.</div>)\n                        }\n                    </>}\n                    {screen === 'leaderboard' && <LeadershipBoard game={game} />}\n                </div>\n                <div className=\"flex align-center justify-center\">\n                    <div>Average | {tries.current ? Math.round(totalTimeTaken.current / tries.current, 0) : 0}ms</div><div className=\"mar-left-30\">Tries | {tries.current} of 5</div>\n                </div>\n            </div>\n        </div >\n    );\n};\n\nconst mapStateToProps = ({ status, game }) => ({ status, game });\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        restartGame: () => dispatch({ type: UserReducerType_SignOut }),\n        submitGameScore: (avgTime) => dispatch(submitScore(avgTime))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReactionTime);","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { StatusReducerType_Posting, StatusReducerType_Failed, StatusReducerType_Idle, StatusReducerType_Success, UserReducerType_SignOut } from '../constants';\nimport { submitScore } from '../actions';\nimport LeadershipBoard from './LeadershipBoard';\n\nconst wordsList = ['Socure', 'Identity', 'Verification', 'Fraud Detection', 'Safety', 'Reliability', 'Customers', 'Client Trust', 'Artificial Intelligence', 'Machine Learning',\n    'High Accuracy', 'Low Risk', 'Faceless', 'Business', 'Challenge', 'Credit Bureau', 'User Experience', 'Auto Approvals', 'Cut Fraud', 'Business Growth',\n    'Financial', 'Institutions', 'Digital', 'Payments', 'Transactions', 'Fraudulent Identity', 'Services', 'Credits', 'Debits', 'Banks', 'Social Network',\n    'Review', 'Technology', 'Approvals', 'Denial', 'Currency', 'Streamline', 'Revenue', 'Maintenance', 'Solution', 'Application', 'Identity Crisis', 'Aida',\n    'Diversity', 'Personal', 'Identification', 'Gateway', 'Leadership', 'Trusted', 'Differentiator', 'Competitive', 'Data Science', 'Engineering',\n    'Predictive Analysis', 'Analytics', 'Security', 'Social', 'Secure', 'Smarter', 'Brilliant', 'Deployment', 'Compliance', 'Brainstorming', 'Score',\n    'Privacy', 'Management', 'Information', 'Genuine', 'Empower', 'Data Security', 'Big Data', 'Information Science', 'Data Scientist', 'Trust Builder', 'Fraud Fighter'];\n\nconst generateRandomNumber = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst VerbalMemory = ({ status, game, submitGameScore, restartGame }) => {\n    const [screen, setScreen] = React.useState('Splash');\n    const [lives, setLives] = React.useState(3);\n    const score = React.useRef(0);\n    const words = React.useRef(10);\n    const selectedIndex = React.useRef(generateRandomNumber(0, words.current));\n    const selectedWords = React.useRef([]);\n    const prevState = React.useRef(StatusReducerType_Idle);\n    const retries = React.useRef(0);\n\n    const [word, setWord] = React.useState(wordsList[selectedIndex.current]);\n\n    React.useEffect(() => {\n        if (lives === 0 && status === StatusReducerType_Idle) {\n            submitGameScore(score.current);\n        }\n\n        if (prevState.current !== status) {\n            prevState.current = status;\n\n            if (status === StatusReducerType_Success) {\n                setTimeout(() => setScreen('leaderboard'), 3000);\n            } else if (status === StatusReducerType_Failed) {\n                if (retries.current < 3) {\n                    setTimeout(() => { submitGameScore(score.current) }, 3000);\n                    retries.current++;\n                } else {\n                    restartGame();\n                }\n            }\n        }\n\n        if (screen === 'leaderboard') {\n            setTimeout(restartGame, 10000);\n        }\n    }, [lives, status, screen, submitGameScore, restartGame]);\n\n    const validateSelection = (type) => {\n        const newWord = (selectedWords.current.indexOf(selectedIndex.current) === -1);\n        newWord && selectedWords.current.push(selectedIndex.current);\n\n        if ((newWord && type === 'SEEN') || (!newWord && type === 'NEW')) {\n            setLives(lives - 1);\n        } else {\n            score.current++;\n        }\n\n        if (score.current > 50) {\n            words.current = wordsList.length;\n        } else if (score.current + 5 > words.current) {\n            words.current += 10;\n        }\n\n        if (lives > 0) {\n            let randInd = generateRandomNumber(0, words.current);\n            while (randInd === selectedIndex.current) {\n                randInd = generateRandomNumber(0, words.current);\n            }\n            selectedIndex.current = randInd;\n            setWord(wordsList[selectedIndex.current]);\n        }\n    };\n\n    return (\n        <div className=\"flex flex1 justify-center bg-orange\">\n            <div className=\"flex flex1 align-center justify-center\">\n                <div className=\"ScreenText InfoTextArea flex flex-col justify-center\">\n                    {screen === 'Splash' && <>\n                        <div className=\"TextTitle flex justify-center\">Verbal Memory Game</div>\n                        <div className=\"flex justify-center GameTitle font-sz-20\">You will be shown words, one at a time.</div>\n                        <div className=\"flex justify-center GameTitle font-sz-20\">If you have seen a word during the game, click SEEN</div>\n                        <div className=\"flex justify-center GameTitle font-sz-20\">If it is new word, click NEW</div>\n                        <div className=\"flex align-center justify-center mar-top-30\">\n                            <Button variant=\"success\" onClick={() => setScreen('Game')}>Start</Button>\n                        </div>\n                    </>}\n                    {screen === 'Game' && <>\n                        <div className=\"flex align-center justify-center font-sz-20\">\n                            <div>Lives | {lives}</div><div className=\"mar-left-30\">Score | {score.current}</div>\n                        </div>\n                        <div className=\"flex justify-center TextTitle mar-top-30\">{word}</div>\n                        {lives > 0 ?\n                            <div className=\"flex justify-center\">\n                                <Button variant=\"success\" className=\"button1\" onClick={() => validateSelection('SEEN')}>SEEN</Button>\n                                <Button variant=\"success\" className=\"button1 mar-left-60\" onClick={() => validateSelection('NEW')}>NEW</Button>\n                            </div> :\n                            (\n                                status === StatusReducerType_Posting ? <div className=\"StatusText\">Submitting Score...</div> :\n                                    status === StatusReducerType_Failed ? <div className=\"StatusText failed\">Score submit failed... retrying...</div> : <div className=\"StatusText success\">Score submitted successfully.</div>)\n                        }\n                    </>}\n                    {screen === 'leaderboard' && <LeadershipBoard game={game} />}\n                </div>\n            </div>\n        </div >\n    );\n};\n\nconst mapStateToProps = ({ status,  game }) => ({ status, game });\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        restartGame: () => dispatch({ type: UserReducerType_SignOut }),\n        submitGameScore: (score) => dispatch(submitScore(score))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VerbalMemory);","import * as React from 'react';\nimport {connect} from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport './VisualMemory.css';\nimport { StatusReducerType_Posting, StatusReducerType_Failed, StatusReducerType_Idle, StatusReducerType_Success, UserReducerType_SignOut } from '../constants';\nimport { submitScore } from '../actions';\nimport LeadershipBoard from './LeadershipBoard';\n\nconst buildPattern = (tilesCount, activeTilesCount) => {\n    let matrix = [];\n    let activeTiles = 0;\n\n    for (let i = 0; i < tilesCount; i++) {\n        matrix[i] = [];\n        for (let j = 0; j < tilesCount; j++) {\n            let value = activeTiles < activeTilesCount ? Math.floor(Math.random() * Math.floor(2)) : 0;\n            if (value) {\n                activeTiles++;\n            }\n            matrix[i][j] = value;\n        }\n    }\n\n    if (activeTiles < activeTilesCount) {\n        while (activeTiles < activeTilesCount) {\n            const x = Math.floor(Math.random() * Math.floor(tilesCount));\n            const y = Math.floor(Math.random() * Math.floor(tilesCount));\n\n            if (matrix[x][y] === 0) {\n                matrix[x][y] = 1;\n                activeTiles++;\n            }\n        }\n    }\n\n    return matrix;\n};\n\nconst tilesMap = {\n    1: 3,\n    3: 4,\n    6: 5,\n    9: 6,\n    14: 7,\n    19: 8\n}\n\nconst VisualMemory = ({ status, game, submitGameScore, restartGame }) => {\n    const [screen, setScreen] = React.useState('Splash');\n    const lives = React.useRef(3);\n    const [pattern, setPattern] = React.useState(buildPattern(3, 3));\n    const level = React.useRef(1);\n    const tiles = React.useRef(3);\n    const prevState = React.useRef(StatusReducerType_Idle);\n    const retries = React.useRef(0);\n\n    const addScore = () => {\n        level.current++;\n        setScreen('Review');\n        if (tilesMap[level.current]) {\n            tiles.current = tilesMap[level.current];\n        }\n        setPattern(buildPattern(tiles.current, level.current + 2));\n    };\n\n    const setLifeLost = () => {\n        lives.current--;\n\n        if (lives.current > 0) {\n            setScreen('Review');\n            setPattern(buildPattern(tiles.current, level.current + 2));\n        } else {\n            setScreen('GameOver');\n            submitGameScore(level.current - 1);\n        }\n    };\n\n    React.useEffect(() => {\n        if (screen === 'Review' && lives.current > 0) {\n            setTimeout(() => setScreen('Game'), 1000);\n        }\n\n        if (prevState.current !== status) {\n            prevState.current = status;\n\n            if (status === StatusReducerType_Success) {\n                setTimeout(() => setScreen('leaderboard'), 3000);\n            } else if (status === StatusReducerType_Failed) {\n                if (retries.current < 3) {\n                    setTimeout(() => { submitGameScore(level.current - 1) }, 3000);\n                    retries.current++;\n                } else {\n                    restartGame();\n                }\n            }\n        }\n\n        if (screen === 'leaderboard') {\n            setTimeout(restartGame, 1000);\n        }\n    }, [screen, status, submitGameScore, restartGame])\n\n    return (\n        <div className=\"flex flex1 justify-center bg-orange visual-test\">\n            <div className=\"flex flex1 align-center justify-center\">\n                <div className=\"ScreenText InfoTextArea flex flex-col justify-center\">\n                    {screen === 'Splash' && <>\n                        <div className=\"TextTitle flex justify-center\">Visual Memory Game</div>\n                        <div className=\"flex justify-center GameTitle font-sz-20\">Every level, a number of tiles will appear with Socure logo. Memorize them, and pick them again after the tiles are reset!</div>\n                        <div className=\"flex justify-center GameTitle font-sz-20\">Levels get progressively more difficult, to challenge your skills.</div>\n                        <div className=\"flex justify-center GameTitle font-sz-20\">If you miss 3 tiles on a level, you lose one life.</div>\n                        <div className=\"flex justify-center GameTitle font-sz-20\">You have three lives.</div>\n                        <div className=\"flex justify-center GameTitle font-sz-20\">Make it as far as you can!</div>\n                        <div className=\"flex align-center justify-center mar-top-30\">\n                            <Button variant=\"success\" onClick={() => setScreen('Game')}>Start</Button>\n                        </div>\n                    </>}\n                    {(screen === 'Game' || screen === 'Review') && <>\n                        <div className=\"flex align-center justify-center\">\n                            <div className=\"score\"><span className=\"faint-label\">Level: </span> {level.current}</div><div className=\"score mar-left-30\"><span className=\"faint-label\">Lives: </span> {lives.current}</div>\n                        </div>\n                        {screen === 'Game' ?\n                            <Matrix tiles={tiles.current} pattern={pattern} setLifeLost={setLifeLost} lives={lives.current} addScore={addScore} /> :\n                            <EmptyMatrix tiles={tiles.current} pattern={buildPattern(tiles.current, 0)} />\n                        }\n                    </>}\n                    {(screen === 'GameOver') && <>\n                        <div className=\"flex flex1 align-center justify-center\">\n                            <div className=\"flex flex-col\">\n                                <div className=\"LevelText flex justify-center\">You have passed {level.current - 1} Levels.</div>\n                                <div className=\"ResultAction flex justify-center\">\n                                    {status === StatusReducerType_Posting ? <div className=\"StatusText\">Submitting Score...</div> :\n                                        status === StatusReducerType_Failed ? <div className=\"StatusText failed\">Score submit failed... retrying...</div> : <div className=\"StatusText success\">Score submitted successfully.</div>}\n                                </div>\n                            </div>\n                        </div>\n                    </>}\n                    {screen === 'leaderboard' && <LeadershipBoard game={game} />}\n                </div>\n            </div>\n        </div >\n    );\n};\n\nconst isPatternMatched = (patterns, selected, tiles) => {\n    let retVal = true;\n\n    for (let x = 0; x < tiles; x++) {\n        for (let y = 0; y < tiles; y++) {\n            if (patterns[x][y] === 1 && !selected[`${x}${y}`]) {\n                retVal = false;\n            }\n        }\n    }\n\n    return retVal;\n};\n\nconst Matrix = ({ tiles, pattern, setLifeLost, addScore, lives }) => {\n    const [view, setView] = React.useState('');\n    const [selected, setSelected] = React.useState({});\n    const chances = React.useRef(3);\n    const prevLives = React.useRef(lives);\n\n    const handleClick = (x, y) => {\n        const match = pattern[x][y] === 1;\n        const newSelected = { ...selected, [`${x}${y}`]: match };\n        setSelected(newSelected);\n\n        if (!match) {\n            chances.current--;\n\n            if (chances.current === 0) {\n                chances.current = 3;\n                prevLives.current = lives;\n                setView('Review');\n                setTimeout(() => {\n                    setSelected({});\n                    setLifeLost();\n                }, 1000);\n            }\n        } else if (isPatternMatched(pattern, newSelected, tiles)) {\n            chances.current = 3;\n            prevLives.current = lives;\n            setView('Review');\n            setTimeout(addScore, 1000);\n        }\n    };\n\n    React.useEffect(() => {\n        if (lives === prevLives.current) {\n            if (view === 'Preview') {\n                setSelected({});\n                setTimeout(() => setView('Game'), 2000);\n            }\n\n            view === '' && setTimeout(setView('Preview'), 2000);\n        } else {\n            if (lives > 0) {\n                setTimeout(setView('Preview'), 2000);\n            }\n        }\n    }, [view, lives]);\n\n    const retVal = [];\n    for (let x = 0; x < tiles; x++) {\n        retVal.push(<MatrixRow key={x} x={x} tiles={tiles} pattern={pattern} view={view} selected={selected} onClick={handleClick} />)\n    }\n    return <div className=\"matrix\">{retVal}</div>;\n};\n\nconst EmptyMatrix = ({ tiles, pattern }) => {\n    const retVal = [];\n    for (let x = 0; x < tiles; x++) {\n        retVal.push(<MatrixRow key={x} x={x} tiles={tiles} pattern={pattern} view={'Game'} selected={{}} onClick={() => { }} />);\n    }\n    return <div className=\"matrix\">{retVal}</div>;\n};\n\nconst MatrixRow = ({ x, tiles, pattern, view, selected, onClick }) => {\n    const retVal = [];\n    for (let y = 0; y < tiles; y++) {\n        retVal.push(<Square key={`${x}${y}`} x={x} y={y} pattern={pattern} tiles={tiles} view={view} selected={selected} onClick={onClick} />)\n    }\n\n    return <div className=\"matrix-row\">{retVal}</div>;\n};\n\nconst Square = ({ x, y, pattern, tiles, view, selected, onClick }) => {\n    let className = \"\";\n\n    const handleClick = () => {\n        onClick(x, y);\n    };\n\n    let value;\n\n    if (view === \"Preview\" && pattern[x][y]) {\n        className = \"active\";\n    } else if (view === \"Game\" || view === \"Review\") {\n        value = selected[`${x}${y}`];\n        className = value === true ? 'active' : value === false ? 'active error' : 'cur-pointer';\n    }\n\n    return (\n        <div className={`square s${tiles} ${className}`} {...(view === 'Game' && value === undefined && { onClick: handleClick })} />\n    );\n};\n\nconst mapStateToProps = ({ status, game }) => ({ status, game });\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        restartGame: () => dispatch({ type: UserReducerType_SignOut }),\n        submitGameScore: (level) => dispatch(submitScore(level))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VisualMemory);","export const FraudData = [\n  {\n    \"Name\": \"Vijay Mallya\",\n    \"Education\": \" St. Xavier's College, Kolkata,\\nwhere he graduated with a Bachelor of Commerce degree (with honours) in 1976\",\n    \"CityOfBirth\": \"Bantwal, \\nKarnataka\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"$ 1.2 Billion\",\n    \"Salaried\": false,\n    \"Age\": \"64\",\n    \"Industry\": \"beverage, aviation infrastructure,\\nreal estate and fertilizer\",\n    \"CriminalRecords\": \"Yes.\",\n    \"Trivia\": \"Reported in 2005 to be someone who prays every day and conducts the entire 42-day Sabarimala fast every year while wearing only black clothing, and to be a devout follower of Sri Sri Ravi Shankar and the Art of Living Foundation.\\nAwared \\\"Officier de la Légion d'Honneur\\\" (sometime prior to 2012), a high award of recognition in France\\n\\\"Global leader for tomorrow\\\", World Economic Forum (sometime prior to 2014)\\n\\\"Entrepreneur of the Year\\\" award at The Asian Awards  (2010)\",\n    \"FraudLabel\": \"Fraud\"\n  },\n  {\n    \"Name\": \"Nirav modi\",\n    \"Education\": \"Wharton School, University of\\n Pennsylvania (drop out)\",\n    \"CityOfBirth\": \"Palanpur,\\nGujarat\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"$1.8 Billion\",\n    \"Salaried\": false,\n    \"Age\": \"48\",\n    \"Industry\": \"Jewellery \",\n    \"CriminalRecords\": \"Yes\",\n    \"Trivia\": \"Founded Firestar in 1999 (Formerly known as Firestone).\\n2013: Featured on the Forbes list of Indian billionaires.\\nFamily runs \\\"Scholarship for Excellence\\\", which supported 250 students every year.\",\n    \"FraudLabel\": \"Fraud\"\n  },\n  {\n    \"Name\": \"Ramalinga Raju\",\n    \"Education\": \"Ohio University\\n graduated with\\n MBA\",\n    \"CityOfBirth\": \"Bhimavaram, \\nHyderabad\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"$2.2 Billion as of 2002\",\n    \"Salaried\": false,\n    \"Age\": \"65\",\n    \"Industry\": \"IT\",\n    \"CriminalRecords\": \"Yes\",\n    \"Trivia\": \"a family run philanthropic organization, was started in July 2001 by him and his 2 brothers in the memory of his father\\nset up a state of the art and first of its kind 24X7 emergency service named Emergency Management and Research Institute (EMRI 108)\",\n    \"FraudLabel\": \"Fraud\"\n  },\n  {\n    \"Name\": \"Harshad Mehta\",\n    \"Education\": \"Lajpatrai College\\n graduated with\\n Bcom\\n\",\n    \"CityOfBirth\": \"Paneli Moti,\\n Gujarat\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"Rs 5 Billion as of 2009\",\n    \"Salaried\": false,\n    \"Age\": \"47\",\n    \"Industry\": \"Finance\",\n    \"CriminalRecords\": \"Yes\",\n    \"Trivia\": \"Established his own firm called GrowMore Research and Asset Management,\",\n    \"FraudLabel\": \"Fraud\"\n  },\n  {\n    \"Name\": \"Salman Khan\",\n    \"Education\": \"St. Xavier's College,\\n Mumbai (drop out)\",\n    \"CityOfBirth\": \"Indore, \\nMadhya Pradesh\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"$310 Million \",\n    \"Salaried\": true,\n    \"Age\": \"53\",\n    \"Industry\": \"Film Industry\",\n    \"CriminalRecords\": \"Yes\",\n    \"Trivia\": \"Award -\\n many awards nationally and international.\\n-  Starred in more than 80 Hindi films and a leading actor of Hindi cinema\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Nithyananda\",\n    \"Education\": \"Rajagopal\\nPolytechnic\\ncollege graduated\\n with \\nMechanical\\nEngineering\",\n    \"CityOfBirth\": \"Tiruvannamalai\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"$23 Million as of 2011\",\n    \"Salaried\": false,\n    \"Age\": \"42\",\n    \"Industry\": \"Guaranteed Solutions\",\n    \"CriminalRecords\": \"Yes, has criminal cases, kidnap, abetting\",\n    \"Trivia\": \"-Founded Dhyanapeetam which hold two Guinness world records,\\n one for the largest rope yoga class and one for the largest pole yoga (mallakhamba) class\\n-The title of Mahamandaleshwar was conferred\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Sundar Pichai\",\n    \"Education\": \"MS in Stanford\\n University and \\nMBA in The Wharton School\",\n    \"CityOfBirth\": \"Madurai,\\n TamilNadu\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"$924 Million as of 2019\",\n    \"Salaried\": true,\n    \"Age\": \"47\",\n    \"Industry\": \"IT\",\n    \"CriminalRecords\": \"No\",\n    \"Trivia\": \"- Board member of  Magic Leap\\n- Global Leadership Award 2019 for \\\"catalyzing growth \\nin the US-India commercial corridor\\\"\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Sathya nadella\",\n    \"Education\": \"Masters in \\nComputer Science\\n in university of\\n Wisconsin\",\n    \"CityOfBirth\": \"Hyderabad, \\nTelangana\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"$326 Million\",\n    \"Salaried\": true,\n    \"Age\": \"52\",\n    \"Industry\": \"IT\",\n    \"CriminalRecords\": \"No\",\n    \"Trivia\": \"CEO of Major Software Giant\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Mukesh Ambani\",\n    \"Education\": \"BE degree in Chemical Engineering \\nof University of Mumbai\",\n    \"CityOfBirth\": \"Aden\",\n    \"CountryOfBirth\": \"Yemen\",\n    \"Networth\": \"$60.8 billion\",\n    \"Salaried\": false,\n    \"Age\": \"62\",\n    \"Industry\": \"Business\",\n    \"CriminalRecords\": \"Yes\",\n    \"Trivia\": \"CEO and MD of many businesses \",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Anand Mahindra\",\n    \"Education\": \" Film making & Architecture\\n from Harvard University ,MBA from the Harvard Business School\",\n    \"CityOfBirth\": \"Bombay\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \" $1.55 billion\",\n    \"Salaried\": false,\n    \"Age\": \"65\",\n    \"Industry\": \"Business\",\n    \"CriminalRecords\": \"No\",\n    \"Trivia\": \"CEO of multiple businesses\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Ratan Tata\",\n    \"Education\": \"Bachelors \\ndegree in Arch\\nfrom the Cornell\\nUniversity, USA,\\nand has pursued\\nan Advanced \\nManagement Program from the Harvard Business School, USA\",\n    \"CityOfBirth\": \"Bombay\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"₹5,700 crores\",\n    \"Salaried\": false,\n    \"Age\": \"82\",\n    \"Industry\": \"Business\",\n    \"CriminalRecords\": \"Yes\",\n    \"Trivia\": \"Awarded 'Commander of the Legion of Honour' by the French Govt.\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Narayana Murthy\",\n    \"Education\": \"Bachelor's in\\nElectrical Engineering\",\n    \"CityOfBirth\": \"Karnataka\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"$2.5 Billion\",\n    \"Salaried\": true,\n    \"Age\": \"73\",\n    \"Industry\": \"IT\",\n    \"CriminalRecords\": \"No\",\n    \"Trivia\": \"Padma Shri in 2000. Padma Vibhushan in 2008.\\n He published a book tiltled \\\"A Better India: A Better World\\\"\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Sasi Tharoor\",\n    \"Education\": \"M.A. in International\\nRelations at The\\nFletcher School of \\nLaw & Diplomacy, \\nTufts University in \\nMedford,Master of Arts in Law and Diplomacy in 1977 and his PhD in International Relations and Affairs in 1978, \",\n    \"CityOfBirth\": \"London\",\n    \"CountryOfBirth\": \"UK\",\n    \"Networth\": \"₹35 crores\",\n    \"Salaried\": true,\n    \"Age\": \"63\",\n    \"Industry\": \"Politics\",\n    \"CriminalRecords\": \"Yes. Included in a Murder case\",\n    \"Trivia\": \"Sahitya Acamedy Award for his book \\\" An Era of Darkness: The British Empire in India\\\". \\nMember of the Lok Sabha for Thiruvananthapuram.\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Nelson Mandela\",\n    \"Education\": \"law at the University of Fort Hare\\n and the University of Witwatersrand\",\n    \"CityOfBirth\": \"Mvezo, Cape Province\",\n    \"CountryOfBirth\": \"South Africa\",\n    \"Networth\": \"£2.5m\",\n    \"Salaried\": true,\n    \"Age\": \"95\",\n    \"Industry\": \"Politics\",\n    \"CriminalRecords\": \"Yes\",\n    \"Trivia\": \" Winner of Nobel Peace Prize. \\nWinner of the US Presidential Medal of Freedom.\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Hansie Cronje\",\n    \"Education\": \"Bachelor of Commerce degree \\nfrom the University of the Free State\",\n    \"CityOfBirth\": \"Bloemfontein, Free State\",\n    \"CountryOfBirth\": \"South Africa\",\n    \"Networth\": \"1.4 million\",\n    \"Salaried\": true,\n    \"Age\": \"32\",\n    \"Industry\": \"Sports\",\n    \"CriminalRecords\": \"Yes. Involved in ethical crime\",\n    \"Trivia\": \"The only player to play in 100+ consecutive ODI matches as captain. \\nHe holds the record for matches won as captain(99 out of 138)\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Bill Clinton\",\n    \"Education\": \"B.S in Foreign Service from Georgetown University. B.Phil in Politics from University College, Oxford. Juris Doctor degree from Yale Law School.\",\n    \"CityOfBirth\": \"Hope, Arkansas\",\n    \"CountryOfBirth\": \"USA\",\n    \"Networth\": \"$80 million\",\n    \"Salaried\": true,\n    \"Age\": \"73\",\n    \"Industry\": \"Politics\",\n    \"CriminalRecords\": \"Yes. Accused of Sexual allegations\",\n    \"Trivia\": \"Winner of the Presidential Medal of Freedom in 2013. \\n\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"george bush\",\n    \"Education\": \"Bachelor of Arts in History from Yale University. MBA from Harvard Business School\",\n    \"CityOfBirth\": \"New Haven, Connecticut\",\n    \"CountryOfBirth\": \"USA\",\n    \"Networth\": \"$40 million\",\n    \"Salaried\": true,\n    \"Age\": \"73\",\n    \"Industry\": \"Politics\",\n    \"CriminalRecords\": \"Yes.\",\n    \"Trivia\": \"He won the Air Force Pilot's Badge. \\n\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Dhoni\",\n    \"Education\": \"B.Com from St. Xavier's College. Not completed yet.\",\n    \"CityOfBirth\": \"Ranchi, Jarkhand\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"$111 million\",\n    \"Salaried\": true,\n    \"Age\": \"38\",\n    \"Industry\": \"Sports\",\n    \"CriminalRecords\": \"No\",\n    \"Trivia\": \"First Player to win the ICC ODI Player of the year award twice. Awarded Padma Shri in 2009. \\nOnly wicket keeper to have more than 150 stumpings. \\nOnly batsmen to cross 10000 plus runs with career average more than 50.\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Hershelle gibbs\",\n    \"Education\": \"Secondary Education from Diocesan College\",\n    \"CityOfBirth\": \"Cape Town\",\n    \"CountryOfBirth\": \"South Africa\",\n    \"Networth\": \"$58 million\",\n    \"Salaried\": true,\n    \"Age\": \"45\",\n    \"Industry\": \"Sports\",\n    \"CriminalRecords\": \"Yes. Involved in ethical crime\",\n    \"Trivia\": \"First player to hit six sixes in an over in ODIs. \\nHe is one of only nine batsmen in ODI history to score hundreds in three consecutive innings\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"David beckham\",\n    \"Education\": \"Schooling at Chingford Foundation School\",\n    \"CityOfBirth\": \"Leytonstone, London\",\n    \"CountryOfBirth\": \"England\",\n    \"Networth\": \"$450 million\",\n    \"Salaried\": true,\n    \"Age\": \"44\",\n    \"Industry\": \"Sports\",\n    \"CriminalRecords\": \"No\",\n    \"Trivia\": \"First British footballer to play 100 UEFA Champions League games. \\nHe is the first English player to win league titles in four countries: England, Spain, the United States and France.\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Abdul Karim Telgi\",\n    \"Education\": \"B.Com\",\n    \"CityOfBirth\": \"Khanapur, Karnataka\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"₹1 billion\",\n    \"Salaried\": false,\n    \"Age\": \"56\",\n    \"Industry\": \"Finance\",\n    \"CriminalRecords\": \"Yes\",\n    \"Trivia\": \"He was suffering from meningitis and died on October 2017 at a Victoria Hospital, Bengaluru. He was suffering from diabetes and hypertension for over 20 years, besides other ailments\",\n    \"FraudLabel\": \"Fraud\"\n  },\n  {\n    \"Name\": \"Jignesh Shah\",\n    \"Education\": \"software engineering\",\n    \"CityOfBirth\": \"Mumbai\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"$1.1 billion as of 2008\",\n    \"Salaried\": false,\n    \"Age\": \"52\",\n    \"Industry\": \"Finance\",\n    \"CriminalRecords\": \"Yes\",\n    \"Trivia\": \"co-founder, chairman and managing director of Financial Technologies (India) Ltd (FTIL)\",\n    \"FraudLabel\": \"Fraud\"\n  },\n  {\n    \"Name\": \"Anubhav Mittal Ablaze Info Solutions\",\n    \"Education\": \"B.Tech in Computer Science. MBA in Finance from IMT-CDL Ghaziabad\",\n    \"CityOfBirth\": \"Hapur, Uttar Pradesh\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"55 crore\",\n    \"Salaried\": false,\n    \"Age\": \"28\",\n    \"Industry\": \"IT\",\n    \"CriminalRecords\": \"No\",\n    \"Trivia\": \"Founder socialtrade.biz , work.com\",\n    \"FraudLabel\": \"Fraud\"\n  },\n  {\n    \"Name\": \"Mehul Choksi (Gitanjali Gems Limited)\",\n    \"Education\": \"University of Mumbai dropout\",\n    \"CityOfBirth\": \"Bombay\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"2,808 crore as of 2016\",\n    \"Salaried\": false,\n    \"Age\": \"60\",\n    \"Industry\": \"Jewellery \",\n    \"CriminalRecords\": \"Yes\",\n    \"Trivia\": \"Took the leadership of Gitanjali Groups\\nHe is currently based in the Caribbean nation of Antigua.\",\n    \"FraudLabel\": \"Fraud\"\n  },\n  {\n    \"Name\": \"Subrata Roy (Sahara Group)\",\n    \"Education\": \"Bachelor's in\\nMechanical Engineering from Gorakhpur\",\n    \"CityOfBirth\": \"Araria, Bihar\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"$2.6 billion\",\n    \"Salaried\": false,\n    \"Age\": \"71\",\n    \"Industry\": \"Finance, IT, Real Estate, Sports, Healthcare\",\n    \"CriminalRecords\": \"Yes\",\n    \"Trivia\": \"He received an honorary doctorate in business leadership from the University of East London. \\n In 2004, company was termed by Time magazine as \\\"the second largest employer in India\\\" after the Government-run Indian Railways. \",\n    \"FraudLabel\": \"Fraud\"\n  },\n  {\n    \"Name\": \"Vikram Kothari (Rotomac)\",\n    \"Education\": \"Not Available\",\n    \"CityOfBirth\": \"Kanpur, Uttar Pradesh\",\n    \"CountryOfBirth\": \"India\",\n    \"Networth\": \"42.26 crore as of 2018\",\n    \"Salaried\": false,\n    \"Age\": \"70 >\",\n    \"Industry\": \"Stationery, Food, Entertainment, Real Estate\",\n    \"CriminalRecords\": \"Yes\",\n    \"Trivia\": \"Managing Director of the famous stationary brand.\",\n    \"FraudLabel\": \"Fraud\"\n  },\n  {\n    \"Name\": \"Warren Buffet\",\n    \"Education\": \"Masters in Economics from Columbia University. \",\n    \"CityOfBirth\": \"Omaha, Nebraska\",\n    \"CountryOfBirth\": \"USA\",\n    \"Networth\": \"$88.9 billion\",\n    \"Salaried\": false,\n    \"Age\": \"89\",\n    \"Industry\": \"Conglomerate\",\n    \"CriminalRecords\": \"No\",\n    \"Trivia\": \"He has been referred to as the \\\"Oracle\\\" or \\\"Sage\\\" of Omaha . \\nHe is the CEO and shareholder of communication giant.\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Tiger Woods\",\n    \"Education\": \"Stanford University\",\n    \"CityOfBirth\": \"Cypress, California\",\n    \"CountryOfBirth\": \"USA\",\n    \"Networth\": \"$800 million\",\n    \"Salaried\": true,\n    \"Age\": \"43\",\n    \"Industry\": \"Sports\",\n    \"CriminalRecords\": \"Yes, Has ethical crime reported\",\n    \"Trivia\": \"He has been the number one player in the world for the most consecutive weeks and \\nfor the greatest total number of weeks of any player in history. \\nHe has been awarded PGA Player of the Year a record 11 times. \\nHe was awarded the Presidential Medal of Freedom.\",\n    \"FraudLabel\": \"No\"\n  },\n  {\n    \"Name\": \"Bill Gates\",\n    \"Education\": \"Pre-law major at Harvard. Dropped out.\",\n    \"CityOfBirth\": \"Seattle, Washington\",\n    \"CountryOfBirth\": \"USA\",\n    \"Networth\": \"$108.2 billion\",\n    \"Salaried\": false,\n    \"Age\": \"64\",\n    \"Industry\": \"IT\",\n    \"CriminalRecords\": \"No\",\n    \"Trivia\": \"In 2015 received the Padma Bhushan. \\n\\nhe was made an Honorary Knight Commander of the Order of the British Empire (KBE) by Queen Elizabeth II in 2005. \\nReceived  France's highest national order – as Commander of the Legion of Honour for their charity efforts\",\n    \"FraudLabel\": \"No\"\n  }\n ];","import * as React from 'react';\nimport { FraudData } from '../data/fraud';\nimport { Button, Card } from 'react-bootstrap';\nimport { StatusReducerType_Posting, StatusReducerType_Failed, StatusReducerType_Success, UserReducerType_SignOut, StatusReducerType_Idle } from '../constants';\nimport './FraudDetection.css';\nimport { submitScore } from '../actions';\nimport { connect } from 'react-redux';\nimport Countdown from 'react-countdown';\nimport LeadershipBoard from './LeadershipBoard';\n\nconst getProfiles = () => {\n    const profiles = [];\n    let fraudDataFound = false;\n\n    while (profiles.length < 3) {\n        const randNo = Math.floor(Math.random() * Math.floor(FraudData.length));\n        if (profiles.indexOf(randNo) === -1) {\n            if (FraudData[randNo].FraudLabel === 'Fraud' && fraudDataFound === false) {\n                profiles.push(randNo);\n                fraudDataFound = true;\n            } else {\n                if (fraudDataFound === false) {\n                    profiles.length < 2 && profiles.push(randNo);\n                } else {\n                    profiles.push(randNo);\n                }\n            }\n        }\n    }\n\n    return profiles.map(id => ({ ...FraudData[id], id }));\n};\n\nconst FraudDetection = ({ status, game, submitGameScore, restartGame }) => {\n    const [screen, setScreen] = React.useState('Splash');\n    const isAnswerCorrect = React.useRef(false);\n    const answer = React.useRef(null);\n    const prevState = React.useRef(StatusReducerType_Idle);\n    const retries = React.useRef(0);\n    const timeOut = React.useRef(false);\n    const startTime = React.useRef(null);\n\n    const  handleStartGame = () => {\n        setScreen('Game');\n        startTime.current = Date.now();\n    };\n\n    const handleTimeout = () => {\n        timeOut.current = true;\n        submitGameScore(0);\n        setScreen('GameOver');\n    };\n\n    const handleDecision = (id) => {\n        answer.current = id;\n        isAnswerCorrect.current = FraudData[id].FraudLabel === 'Fraud';\n\n        submitGameScore(isAnswerCorrect.current ? Math.round((Date.now() - startTime.current)/1000, 0): 0);\n\n        setScreen('GameOver');\n    };\n\n    React.useEffect(() => {\n        if (prevState.current !== status) {\n            prevState.current = status;\n\n            if (status === StatusReducerType_Success) {\n                setTimeout(() => {setScreen('leaderboard');}, 3000);\n            } else if (status === StatusReducerType_Failed) {\n                if (retries.current < 3) {\n                    setTimeout(() => { submitGameScore(isAnswerCorrect.current ? 1 : 0) }, 3000);\n                    retries.current++;\n                } else {\n                    restartGame();\n                }\n            }\n        }\n\n        if (screen === 'leaderboard') {\n            setTimeout(restartGame, 10000);\n        }\n    }, [screen, status, submitGameScore, restartGame])\n\n    return (\n        <div className=\"flex flex1 justify-center bg-orange visual-test\">\n            <div className=\"flex flex1 align-center justify-center\">\n                <div className=\"ScreenText InfoTextArea flex flex-col justify-center relative\">\n                    {screen === 'Splash' && <>\n                        <div className=\"TextTitle flex justify-center\">Fraud Detection</div>\n                        <div className=\"flex justify-center GameTitle font-sz-20\">3 known celebrities data will be presented in a respective card.</div>\n                        <div className=\"flex justify-center GameTitle font-sz-20\">The details about every celebrity will be displayed in the card.</div>\n                        <div className=\"flex justify-center GameTitle font-sz-20\">As a detective, you have to identify the character who has FRAUDULENT data.</div>\n                        <div className=\"flex justify-center GameTitle font-sz-20\">You have 90 seconds to decide.</div>\n                        <div className=\"flex align-center justify-center mar-top-30\">\n                            <Button variant=\"success\" onClick={handleStartGame}>Start</Button>\n                        </div>\n                    </>}\n                    {(screen === 'Game' || screen === 'Review') && <>\n                        <div className=\"flex align-center justify-center\">\n                            <Game data={getProfiles()} onAnswer={handleDecision} onTimeout={handleTimeout} />\n                        </div>\n                    </>}\n                    {(screen === 'GameOver') && <>\n                        <div className=\"flex flex1 align-center justify-center\">\n                            <div className=\"flex flex-col\">\n                                <div className=\"LevelText flex justify-center\">\n                                    {timeOut.current && <div>Sorry your time is up!!!.</div>}\n                                    {timeOut.current === false && (isAnswerCorrect.current ? <div className=\"\">Wow!!! You nailed it.</div> : <div className=\"\">Sorry!!! It is not the right answer. You have chosen {FraudData[answer.current].Name}'s profile.</div>)}\n                                </div>\n                                <div className=\"ResultAction flex justify-center\">\n                                    {status === StatusReducerType_Posting ? <div className=\"StatusText\">Submitting Score...</div> :\n                                        status === StatusReducerType_Failed ? <div className=\"StatusText failed\">Score submit failed... retrying...</div> : <div className=\"StatusText success\">Score submitted successfully.</div>}\n                                </div>\n                            </div>\n                        </div>\n                    </>}\n                    {screen === 'leaderboard' && <LeadershipBoard game={game} />}\n                </div>\n            </div>\n        </div >\n    );\n};\n\nconst Game = ({ data, onAnswer, onTimeout }) => {\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    const [answer, setAnswer] = React.useState('');\n\n    const prefixZero = (value) => {\n        return value < 10 ? `0${value}` : value;\n    };\n\n    const handleCardClick = (id, character) => {\n        setSelectedCard({ ...FraudData[id], id, character });\n    }\n\n    const handleCardClose = () => {\n        setSelectedCard(null);\n    }\n\n    const checkAnswer = () => {\n        onAnswer(parseInt(answer, 10));\n    }\n\n    const renderer = ({ hours, minutes, seconds, completed }) => {\n        if (completed) {\n          onTimeout();\n          return null;\n        } else {\n          return <span>{prefixZero(hours)}:{prefixZero(minutes)}:{prefixZero(seconds)}</span>;\n        }\n      };\n\n    if (selectedCard) {\n        return (<GameCard {...selectedCard} onClose={handleCardClose} onAnswer={onAnswer} selected />)\n    } else {\n        return (\n            <div className=\"fraud-detection-game flex flex1 flex-col\">\n                <div className=\"count-down absolute\">\n                    <Countdown\n                        date={Date.now() + 90000}\n                        renderer={renderer}\n                    />\n                </div>\n                <div className=\"char-cards flex flex1 overflow-hidden\">\n                    {data.map((d, idx) => <GameCard key={d.Name} {...d} onClick={handleCardClick} onAnswer={onAnswer} selected={false} character={idx + 1} />)}\n                </div>\n                <div className=\"flex flex1 align-center justify-center mar-top-30\">\n                    <div className=\"flex align-center justify-center\">\n                        <div>The celebrity with fraudulent data is</div>\n                        <select className=\"mar-left-10\" selected={answer} onChange={({ target }) => { setAnswer(target.value) }}>\n                            <option value=\"\">--select--</option>\n                            {data.map((d, idx) => <option key={d.id} value={d.id}>Character {idx + 1}</option>)}\n                        </select>\n                        <Button className=\"mini-btn mar-left-10\" variant=\"success\" onClick={checkAnswer} disabled={!!!answer}>Submit</Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nconst GameCard = ({ Name, Education, CityOfBirth, CountryOfBirth, Networth, Salaried, Age, Industry, CriminalRecords, Trivia, id, selected, onClick, onClose, onAnswer, character }) => {\n    if (selected) {\n        return (\n            <Card className=\"game-card selected overflow-scrolly\">\n                <Card.Title className=\"flex modal-header\">\n                    <div className=\"flex flex1 align-center\">\n                        Character {character}\n                    </div>\n                    <div className=\"flex align-right\">\n                        <button type=\"button\" className=\"close\" onClick={onClose}><span aria-hidden=\"true\">×</span><span className=\"sr-only\">Close</span></button></div></Card.Title>\n                <Card.Body className=\"flex\">\n                    <div className=\"flex flex-col flex1\">\n                        <div className=\"flex flex1 flex-col\">\n                            <div className=\"flex flex-col\">\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">Education</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{Education}</div>\n                                </div>\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">City of Birth</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{CityOfBirth}</div>\n                                </div>\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">Country Of Birth</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{CountryOfBirth}</div>\n                                </div>\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">Net Worth</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{Networth}</div>\n                                </div>\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">Salaried</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{Salaried ? 'Yes' : 'No'}</div>\n                                </div>\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">Age</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{Age}</div>\n                                </div>\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">Industry</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{Industry}</div>\n                                </div>\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">Criminal Records (if any)</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{CriminalRecords}</div>\n                                </div>\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">Trivia</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue trivia\">{Trivia}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Card.Body>\n            </Card>\n        );\n    } else {\n        return (\n            <Card className=\"game-card overflow-scrolly\" onClick={() => onClick(id, character)}>\n                <Card.Title className=\"modal-header\">\n                    <div className=\"flex flex1 align-center\">\n                        Character {character}\n                    </div>\n                </Card.Title>\n                <Card.Body className=\"flex\">\n                    <div className=\"flex flex-col flex1\">\n                        <div className=\"flex flex1 flex-col\">\n                            <div className=\"flex flex-col\">\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">Education</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{Education}</div>\n                                </div>\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">City of Birth</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{CityOfBirth}</div>\n                                </div>\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">Country Of Birth</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{CountryOfBirth}</div>\n                                </div>\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">Net Worth</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{Networth}</div>\n                                </div>\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">Salaried</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{Salaried ? 'Yes' : 'No'}</div>\n                                </div>\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">Age</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{Age}</div>\n                                </div>\n                                <div className=\"card-row flex1 flex\">\n                                    <div className=\"fieldname\">Industry</div>\n                                    <div className=\"separator\">:</div>\n                                    <div className=\"fieldvalue\">{Industry}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Card.Body>\n            </Card>\n        )\n    }\n};\n\nconst mapStateToProps = ({ status, game }) => ({ status,  game });\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        restartGame: () => dispatch({ type: UserReducerType_SignOut }),\n        submitGameScore: (level) => dispatch(submitScore(level))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FraudDetection);","import * as React from 'react';\n\nconst LockedScreen = () => {\n    return (\n        <div className=\"flex flex1 justify-center bg-orange visual-test\">\n            <div className=\"flex flex1 align-center justify-center\">\n                <div className=\"TextTitle InfoTextArea flex flex-col align-center justify-center relative\">\n                    Game Session is currently suspended!!!\n                </div>\n            </div>\n        </div>\n\n    )\n};\n\nexport default LockedScreen;","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport SignUp from './SignUp';\nimport NumberMemory from './NumberMemory';\nimport ReactionTime from './ReactionTime';\nimport VerbalMemory from './VerbalMemory';\nimport VisualMemory from './VisualMemory';\nimport FraudDetection from './FraudDetection';\nimport LockedScreen from './LockedScreen';\nimport './Main.css'\nimport { GameReducerType_NumberMemory, GameReducerType_ReactionTime, GameReducerType_VerbalMemory, GameReducerType_VisualMemory, GameReducerType_FraudDetection, GameReducerType_Locked } from '../constants';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nconst Main = ({ user, game, setGame }) => {\n    useHotkeys('control+shift+1', () => {\n        setGame(GameReducerType_NumberMemory);\n    });\n\n    useHotkeys('control+shift+2', () => {\n        setGame(GameReducerType_ReactionTime);\n    });\n\n    useHotkeys('control+shift+3', () => {\n        setGame(GameReducerType_VerbalMemory);\n    });\n\n    useHotkeys('control+shift+4', () => {\n        setGame(GameReducerType_VisualMemory);\n    });\n\n    useHotkeys('control+shift+5', () => {\n        setGame(GameReducerType_FraudDetection);\n    });\n\n    useHotkeys('control+shift+l', () => {\n        setGame(GameReducerType_Locked);\n    });\n\n    useHotkeys('alt+shift+7', () => {\n        setGame(GameReducerType_NumberMemory);\n    });\n\n    useHotkeys('f5,control+r,command+r', (ke) => {\n        ke.preventDefault();\n        console.log(\"Refresh handled...\")\n    });\n\n    return (\n        <div className=\"App flex flex1 height-100\">\n            <div className=\"flex flex1 justify-center\">\n                <div className=\"width-90vw flex\">\n                    <div className=\"Main-content flex flex1 mar-top-30\">\n                        {game === GameReducerType_Locked ? <LockedScreen /> : !user ? <SignUp /> : <Game game={game} />}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\nconst Game = ({ game }) => {\n    switch (game) {\n        case GameReducerType_NumberMemory:\n            return <NumberMemory />;\n        case GameReducerType_ReactionTime:\n            return <ReactionTime />;\n        case GameReducerType_VerbalMemory:\n            return <VerbalMemory />;\n        case GameReducerType_VisualMemory:\n            return <VisualMemory />;\n        case GameReducerType_FraudDetection:\n            return <FraudDetection />\n        default:\n            return null;\n    }\n};\n\nconst mapStateToProps = ({ user, game }) => ({\n    user, game\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    setGame: (gameType) => dispatch({ type: gameType })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport Main from './components/Main';\nimport './App.css';\nimport './customize.scss';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}